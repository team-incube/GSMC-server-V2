name: Deploy to Production

on:
  push:
    branches:
        - main
        - feat/cicd

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/gsmc-server-v2
  DOCKER_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build -x test
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          platforms: linux/amd64

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: gsmsv-1.yujun.kr
          port: 30071
          username: ubuntu
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker stop gsmc-server-v2 || true
            docker rm gsmc-server-v2 || true
            docker rmi ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} || true
            docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            docker run -d \
              --name gsmc-server-v2 \
              --restart unless-stopped \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            sleep 30
            docker ps | grep gsmc-server-v2
      - name: Notify Discord on Success
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "üöÄ Production Deployment Successful",
                   "description": "GSMC Server V2 has been successfully deployed to production",
                   "color": 3066993,
                   "fields": [
                     {
                       "name": "Repository",
                       "value": "${{ github.repository }}",
                       "inline": true
                     },
                     {
                       "name": "Branch",
                       "value": "${{ github.ref_name }}",
                       "inline": true
                     },
                     {
                       "name": "Commit",
                       "value": "[`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})",
                       "inline": true
                     },
                     {
                       "name": "Author",
                       "value": "${{ github.actor }}",
                       "inline": true
                     },
                     {
                       "name": "Docker Image",
                       "value": "${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}",
                       "inline": false
                     },
                     {
                       "name": "Server",
                       "value": "gsmsv-1.yujun.kr:30071",
                       "inline": true
                     }
                   ],
                   "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
                 }]
               }' \
               $DISCORD_WEBHOOK
      - name: Notify Discord on Failure
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "‚ùå Production Deployment Failed",
                   "description": "GSMC Server V2 deployment to production has failed",
                   "color": 15158332,
                   "fields": [
                     {
                       "name": "Repository",
                       "value": "${{ github.repository }}",
                       "inline": true
                     },
                     {
                       "name": "Branch",
                       "value": "${{ github.ref_name }}",
                       "inline": true
                     },
                     {
                       "name": "Commit",
                       "value": "[`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})",
                       "inline": true
                     },
                     {
                       "name": "Author",
                       "value": "${{ github.actor }}",
                       "inline": true
                     },
                     {
                       "name": "Workflow Run",
                       "value": "[${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})",
                       "inline": false
                     }
                   ],
                   "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
                 }]
               }' \
               $DISCORD_WEBHOOK
